@model Cliente.Models.AvaliacaoPedido

@{
    ViewBag.Title = "ConfirmarPedidoEntregue";
}

<div class="my-div-class">
    @Html.ActionLink("Voltar", "Listar", "Pedidos", new { cpf = ViewBag.CPF }, new { @class = "btn btn-primary btn-lg", style = "text-decoration: none;" })
</div>

@if (ViewBag.CPF != null)
{
    <h2 align="center">Confirmar Entrega de Pedido do CPF @ViewBag.CPF</h2>
}
else
{
<h2>Confirmar Entrega</h2>
}

<style>



</style>

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ConfirmarPedidoEntregue</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal" align="center">
        <h4 align="center">Avaliação de Pedido</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CodPedido, "Código do Pedido:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <h2 style="color:red"> @Html.DisplayFor(model => model.CodPedido)</h2>
                @Html.ValidationMessageFor(model => model.CodPedido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Avaliacao, "Avaliação:", htmlAttributes: new { @class = "control-label col-md-2 label-grande" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Avaliacao, new { @class = "form-control textarea-grande" })
                @Html.ValidationMessageFor(model => model.Avaliacao, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Confirmar Entrega" class="btn btn-success btn-lg" />
            </div>
        </div>
    </div>
    <br />
    }


</body>
</html>
